---
// Define the navigation items
const navItems = [
  { text: 'Home', href: '/' },
  { text: 'About Us', href: '/about-us' },
  { text: 'Mountaineering', href: '/mountaineering' },
  { text: 'Trekking', href: '/trekking' },
  { text: 'Events', href: '/events' },
  { text: 'FAQ', href: '/faq' },
  { text: 'Contact', href: '/contact' },
];

// Get the current URL path to highlight the active link
const currentPath = Astro.url.pathname;

// Social media links
const socialLinks = [
  {
    name: 'Facebook',
    href: 'https://www.facebook.com/andeankingdomadventures',
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
            <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
          </svg>`,
  },
  {
    name: 'Instagram',
    href: 'https://www.instagram.com/andeankingdom/',
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
          </svg>`,
  },
  // {
  //   name: "YouTube",
  //   href: "https://youtube.com/andeankingdom",
  //   icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
  //           <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
  //         </svg>`
  // },
];
---

<!-- Desktop Navigation -->
<nav id='nav' class='hidden lg:block'>
  <ul class='flex items-center space-x-6'>
    {
      navItems.map((item) => {
        const isActive =
          currentPath === item.href ||
          (item.href !== '/' && currentPath.startsWith(item.href));

        return (
          <li>
            <a
              data-link
              href={item.href}
              class={`text-xl font-medium text-white hover:text-color-primary transition-colors duration-300 ${isActive && 'font-semibold underline-offset-4 underline'}`}
              aria-current={isActive ? 'page' : undefined}
            >
              {item.text}
            </a>
          </li>
        );
      })
    }
    <!-- Social Links -->
    <div class='flex space-x-2 mt-0 text-sm'>
      {
        socialLinks.map((link) => (
          <a
            data-link
            href={link.href}
            target='_blank'
            rel='noopener noreferrer'
            class='text-white px-1'
            aria-label={link.name}
          >
            <Fragment set:html={link.icon} />
          </a>
        ))
      }
    </div>
  </ul>
</nav>

<!-- Mobile Menu Button -->
<button
  id='mobile-menu-button'
  class='lg:hidden p-2 text-gray-700 hover:text-color-primary focus:outline-none transition-colors relative'
  aria-label='Toggle Menu'
  aria-expanded='false'
>
  <svg
    xmlns='http://www.w3.org/2000/svg'
    class='h-6 w-6'
    fill='none'
    viewBox='0 0 24 24'
    stroke='currentColor'
  >
    <path
      stroke-linecap='round'
      stroke-linejoin='round'
      stroke-width='2'
      d='M4 6h16M4 12h16M4 18h16'></path>
  </svg>
</button>

<!-- Mobile Menu Dropdown - Compact & Clean -->
<div
  id='mobile-menu'
  class='absolute top-full left-0 right-0 bg-white shadow-lg border-t border-gray-100 transform scale-y-0 origin-top transition-transform duration-200 ease-out lg:hidden z-50'
  role='menu'
  aria-labelledby='mobile-menu-button'
>
  <!-- Navigation Links in Grid -->
  <div class='px-4 py-6'>
    <div class='grid grid-cols-2 gap-3'>
      {
        navItems.map((item) => {
          const isActive =
            currentPath === item.href ||
            (item.href !== '/' && currentPath.startsWith(item.href));

          return (
            <a
              href={item.href}
              class={`block px-4 py-3 text-sm font-medium rounded-lg transition-colors text-center ${
                isActive
                  ? 'text-color-primary font-semibold bg-gray-100'
                  : 'text-gray-700 hover:bg-gray-50 hover:text-color-primary border border-transparent'
              }`}
              role='menuitem'
              aria-current={isActive ? 'page' : undefined}
            >
              {item.text}
            </a>
          );
        })
      }
    </div>

    <div class='mt-4 pt-4 border-t border-gray-100'>
      <!-- Social Links -->
      <div class='flex space-x-2 mt-0 text-sm'>
        {
          socialLinks.map((link) => (
            <a
              href={link.href}
              target='_blank'
              rel='noopener noreferrer'
              class='flex items-center justify-center px-2 py-2 font-medium text-gray-600'
              aria-label={link.name}
            >
              <Fragment set:html={link.icon} />
            </a>
          ))
        }
      </div>
    </div>
  </div>
</div>

<style>
  /* Mobile menu button animation */
  #mobile-menu-button:hover svg {
    transform: scale(1.1);
  }

  #mobile-menu-button svg {
    transition: transform 0.2s ease;
  }

  /* Mobile menu show/hide states */
  #mobile-menu.show {
    transform: scaleY(1);
  }

  /* Smooth hover effects */
  #mobile-menu a {
    transition: all 0.15s ease;
  }

  /* Active state styling */
  #mobile-menu a[aria-current='page'] {
    font-weight: 600;
  }
</style>

<script>
  // Mobile menu functionality
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');

    let isMenuOpen = false;

    // Function to toggle mobile menu
    const toggleMobileMenu = () => {
      isMenuOpen = !isMenuOpen;

      if (isMenuOpen) {
        // Show menu
        if (mobileMenu) mobileMenu.classList.add('show');
        if (mobileMenuButton)
          mobileMenuButton.setAttribute('aria-expanded', 'true');
      } else {
        // Hide menu
        if (mobileMenu) mobileMenu.classList.remove('show');
        if (mobileMenuButton)
          mobileMenuButton.setAttribute('aria-expanded', 'false');
      }
    };

    // Event listeners
    mobileMenuButton?.addEventListener('click', (e) => {
      e.stopPropagation();
      toggleMobileMenu();
    });

    // Close menu when clicking outside
    document.addEventListener('click', (e) => {
      if (
        isMenuOpen &&
        mobileMenu &&
        mobileMenuButton &&
        !mobileMenu.contains(e.target as Node) &&
        !mobileMenuButton.contains(e.target as Node)
      ) {
        toggleMobileMenu();
      }
    });

    // Close menu when clicking a navigation link
    const navLinks = mobileMenu?.querySelectorAll('a[href^="/"]');
    navLinks?.forEach((link) => {
      link.addEventListener('click', () => {
        if (isMenuOpen) {
          setTimeout(() => toggleMobileMenu(), 100);
        }
      });
    });

    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && isMenuOpen) {
        toggleMobileMenu();
      }
    });

    // Handle window resize
    window.addEventListener('resize', () => {
      if (window.innerWidth >= 1024 && isMenuOpen) {
        toggleMobileMenu();
      }
    });
  });

  // Cammbio color del texto del menu on scroll
  const links = document.querySelectorAll('[data-link]');

  window.addEventListener('scroll', () => {
    if (window.scrollY > 50) {
      links.forEach((link) => {
        link.classList.remove('text-white');
        link.classList.add('text-primary-800');
      });
    } else {
      links.forEach((link) => {
        link.classList.add('text-white');
        link.classList.remove('text-primary-800');
      });
    }
  });

  let lastScroll = 0;
  const menu = document.getElementById('nav');

  window.addEventListener('scroll', () => {
    const currentScroll = window.scrollY;

    if (menu) {
      if (currentScroll > lastScroll && currentScroll > 700) {
        // Scroll hacia abajo y pasó los 600px → ocultar
        menu.classList.add(
          '-translate-y-full',
          'opacity-0',
          'pointer-events-none'
        );
      } else {
        // Scroll hacia arriba o aún no pasó 600px → mostrar
        menu.classList.remove(
          '-translate-y-full',
          'opacity-0',
          'pointer-events-none'
        );
      }
    }

    lastScroll = currentScroll;
  });
</script>
