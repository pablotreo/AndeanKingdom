---
import "../assets/styles/global.css";
import Seo from "../components/UI/Seo.astro";
import Header from "../components/Global/Header.astro";
import Footer from "../components/Global/Footer.astro";

export interface Props {
  title?: string;
  description?: string;
  image?: {
    url: string;
    alt: string;
  };
  type?: "website" | "article";
  canonicalUrl?: string;
}

const {
  title = "Andean Kingdom - If you think it's impossible, we can make it happen.",
  description = "Andean Kingdom is your gateway to adventure in the Peruvian Andes. Experience the thrill of mountaineering, trekking, and cultural exploration with our expeditions and tours.",
  image = {
    url: "/uploads/Home/aboutUs.jpg",
    alt: "Andean Kingdom",
  },
  type = "website",
  canonicalUrl,
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    
    <Seo
      title={title}
      description={description}
      image={image}
      type={type}
      canonicalUrl={canonicalUrl}
    />
    <!-- <link rel="preconnect" href="https://rsms.me/"> -->
    <!-- <link rel="stylesheet" href="https://rsms.me/inter/inter.css">   -->
    
    <link rel="sitemap" href="/sitemap-index.xml" />
    <!-- <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png"> -->
    <!-- <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png"> -->
    <!-- <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png"> -->
    <link rel="manifest" href="/site.webmanifest">
  </head>
  <body>
    <div class="flex flex-col min-h-screen">
      <Header />
      
      <main class="flex-grow">
        <slot />
      </main>
      
      <Footer />
    </div>
    <script type="module">
      try {
        const { default: Lenis } = await import('https://esm.sh/lenis@1.3.8')

        const lenis = new Lenis({
          smooth: true,
          duration: 1.2,
          easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
        })

        // document.body.classList.add('lenis-enabled')

        function raf(time) {
          lenis.raf(time)
          requestAnimationFrame(raf)
        }

        requestAnimationFrame(raf)
      } catch (error) {
        console.warn('[Lenis] Failed to load:', error)
        document.body.classList.remove('lenis-enabled')
      }
    </script>

  </body>
</html>